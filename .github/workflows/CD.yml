name: deploy
on:
  push:
    branches:
      - main

env:
  REGISTRY: "niknike"
  IMAGE_NAME: "bazaar-ui"
  CONTAINER_NAME: "ui"

jobs:
  build-and-push:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.REGISTRY }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          file: ./Dockerfile
          build-args: |
            IMAGE_NAME=${{ env.IMAGE_NAME }}
            REGISTRY=${{ env.REGISTRY }}
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.VM_KEY }}
          envs: REGISTRY, IMAGE_NAME, CONTAINER_NAME
          script: |
            echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u $REGISTRY --password-stdin
            docker container stop $CONTAINER_NAME
            docker system prune -af
            docker pull $REGISTRY/$IMAGE_NAME:latest
            docker run --rm -d --network host --name $CONTAINER_NAME --volume /home/ubuntu/ssl:/ssl $REGISTRY/$IMAGE_NAME:latest